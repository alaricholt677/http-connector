export async function httpAndWebGL(url, gl) { const res = await fetch(url); if (!res.ok) throw new Error(`HTTP Error: ${res.status}`); const data = await res.json(); const vShader = gl.createShader(gl.VERTEX_SHADER), fShader = gl.createShader(gl.FRAGMENT_SHADER), program = gl.createProgram(); gl.shaderSource(vShader, data.vertexShader); gl.shaderSource(fShader, data.fragmentShader); gl.compileShader(vShader); gl.compileShader(fShader); if (!gl.getShaderParameter(vShader, gl.COMPILE_STATUS) || !gl.getShaderParameter(fShader, gl.COMPILE_STATUS)) throw new Error("Shader compilation failed"); gl.attachShader(program, vShader); gl.attachShader(program, fShader); gl.linkProgram(program); if (!gl.getProgramParameter(program, gl.LINK_STATUS)) throw new Error("Program linking failed"); gl.useProgram(program); return { program, data }; }
